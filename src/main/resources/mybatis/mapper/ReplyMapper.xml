<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.blog.repository.ReplyRepository">
    <select id="findAllByBlogId" parameterType="long" resultType="com.spring.blog.dto.ReplyFindByIdDTO">
        SELECT
            reply_id AS replyId,
            reply_writer AS replyWriter,
            reply_content AS replyContent,
            published_at AS publishedAt,
            updated_at AS updatedAt
        FROM reply
        WHERE blog_id = #{blogId}
    </select>
    <select id="findByReplyId" resultType="com.spring.blog.dto.ReplyFindByIdDTO" parameterType="long">
        SELECT
            reply_id AS replyId,
            reply_writer AS replyWriter,
            reply_content AS replyContent,
            published_at AS publishedAt,
            updated_at AS updatedAt
        FROM reply
        WHERE reply_id = #{replyId}
    </select>
    <delete id="deleteByReplyId" parameterType="long">
        DELETE FROM reply WHERE reply_id = #{replyId}
    </delete>
    <insert id="save" parameterType="com.spring.blog.dto.ReplyInsertDTO">
        INSERT INTO reply (blog_id, reply_writer, reply_content) VALUES (#{blogId}, #{replyWriter}, #{replyContent})
    </insert>
    <update id="update" parameterType="com.spring.blog.dto.ReplyUpdateDTO">
        UPDATE reply SET reply_content = #{replyContent}, updated_at = now() WHERE reply_id = #{replyId}
    </update>
    <delete id="deleteAllByBlogId" parameterType="long">
        DELETE FROM reply WHERE blog_id = #{blogId}
    </delete>
</mapper>