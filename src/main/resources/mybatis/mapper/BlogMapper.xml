<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.blog.repository.BlogRepository">
    <!--  리턴타입이 entity 등의 클래스인 경우 패키지명부터 적어준다  -->
    <select id="findAll" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id AS blogId,
            writer,
            blog_title As blogTitle,
            blog_content AS blogContent,
            published_at AS publishedAt,
            updated_at AS updatedAt,
            blog_count AS blogCount
        FROM
            blog
    </select>
    <select id="findById" parameterType="long" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id AS blogId,
            writer,
            blog_title As blogTitle,
            blog_content AS blogContent,
            published_at AS publishedAt,
            updated_at AS updatedAt,
            blog_count AS blogCount
        FROM
            blog
        WHERE
            blog_id = #{blogId}
    </select>

    <insert id="save" parameterType="com.spring.blog.entity.Blog">
        INSERT INTO blog (writer, blog_title, blog_content) VALUES (#{writer},#{blogTitle},#{blogContent})
    </insert>

    <delete id="deleteById" parameterType="long">
        DELETE FROM blog WHERE blog_id = #{blogId}
    </delete>
    <update id="update" parameterType="com.spring.blog.entity.Blog">
        UPDATE blog
        SET blog_title = #{blogTitle}, blog_content = #{blogContent}, updated_at = now()
        WHERE blog_id = #{blogId}
    </update>

    <!-- 테스트를 위한 쿼리문 -->
    <!-- 항상 같은 환경에서 테스트 해야 하기 때문에 -->
    <update id="createBlogTable">
        <!--   테이블이 없을때 생성     -->
        CREATE TABLE IF NOT EXISTS blog(
            blog_id int auto_increment primary key,
            writer varchar(16) not null,
            blog_title varchar(200) not null,
            blog_content varchar(4000) not null,
            published_at datetime default now(),
            updated_at datetime default now(),
            blog_count int default 0
        )
    </update>
    <update id="dropBlogTable">
        DROP TABLE blog
    </update>
    <insert id="insertTestData">
        INSERT INTO blog VALUES
        (null,'1번유저','1번제목','1번본문',now(),now(),null),
        (null,'2번유저','2번제목','2번본문',now(),now(),null),
        (null,'3번유저','3번제목','3번본문',now(),now(),null)
    </insert>
</mapper>